///**
// * Autogenerated by Avro
// *
// * DO NOT EDIT DIRECTLY
// */
//package com.github.rkandoji.kafka.avro;
//
//import org.apache.avro.generic.GenericArray;
//import org.apache.avro.specific.SpecificData;
//import org.apache.avro.util.Utf8;
//import org.apache.avro.message.BinaryMessageEncoder;
//import org.apache.avro.message.BinaryMessageDecoder;
//import org.apache.avro.message.SchemaStore;
//
//@org.apache.avro.specific.AvroGenerated
//public class pipeline_message extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
//  private static final long serialVersionUID = 5118096175843797329L;
//  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"pipeline_message\",\"namespace\":\"com.github.rkandoji.kafka.avro\",\"fields\":[{\"name\":\"trace_id\",\"type\":\"string\"},{\"name\":\"data_version\",\"type\":\"string\"},{\"name\":\"ts_created_at\",\"type\":\"string\"},{\"name\":\"payload\",\"type\":\"string\"}]}");
//  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
//
//  private static SpecificData MODEL$ = new SpecificData();
//
//  private static final BinaryMessageEncoder<pipeline_message> ENCODER =
//      new BinaryMessageEncoder<pipeline_message>(MODEL$, SCHEMA$);
//
//  private static final BinaryMessageDecoder<pipeline_message> DECODER =
//      new BinaryMessageDecoder<pipeline_message>(MODEL$, SCHEMA$);
//
//  /**
//   * Return the BinaryMessageEncoder instance used by this class.
//   * @return the message encoder used by this class
//   */
//  public static BinaryMessageEncoder<pipeline_message> getEncoder() {
//    return ENCODER;
//  }
//
//  /**
//   * Return the BinaryMessageDecoder instance used by this class.
//   * @return the message decoder used by this class
//   */
//  public static BinaryMessageDecoder<pipeline_message> getDecoder() {
//    return DECODER;
//  }
//
//  /**
//   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
//   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
//   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
//   */
//  public static BinaryMessageDecoder<pipeline_message> createDecoder(SchemaStore resolver) {
//    return new BinaryMessageDecoder<pipeline_message>(MODEL$, SCHEMA$, resolver);
//  }
//
//  /**
//   * Serializes this pipeline_message to a ByteBuffer.
//   * @return a buffer holding the serialized data for this instance
//   * @throws java.io.IOException if this instance could not be serialized
//   */
//  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
//    return ENCODER.encode(this);
//  }
//
//  /**
//   * Deserializes a pipeline_message from a ByteBuffer.
//   * @param b a byte buffer holding serialized data for an instance of this class
//   * @return a pipeline_message instance decoded from the given buffer
//   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
//   */
//  public static pipeline_message fromByteBuffer(
//      java.nio.ByteBuffer b) throws java.io.IOException {
//    return DECODER.decode(b);
//  }
//
//   private java.lang.CharSequence trace_id;
//   private java.lang.CharSequence data_version;
//   private java.lang.CharSequence ts_created_at;
//   private java.lang.CharSequence payload;
//
//  /**
//   * Default constructor.  Note that this does not initialize fields
//   * to their default values from the schema.  If that is desired then
//   * one should use <code>newBuilder()</code>.
//   */
//  public pipeline_message() {}
//
//  /**
//   * All-args constructor.
//   * @param trace_id The new value for trace_id
//   * @param data_version The new value for data_version
//   * @param ts_created_at The new value for ts_created_at
//   * @param payload The new value for payload
//   */
//  public pipeline_message(java.lang.CharSequence trace_id, java.lang.CharSequence data_version, java.lang.CharSequence ts_created_at, java.lang.CharSequence payload) {
//    this.trace_id = trace_id;
//    this.data_version = data_version;
//    this.ts_created_at = ts_created_at;
//    this.payload = payload;
//  }
//
//  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
//  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
//  // Used by DatumWriter.  Applications should not call.
//  public java.lang.Object get(int field$) {
//    switch (field$) {
//    case 0: return trace_id;
//    case 1: return data_version;
//    case 2: return ts_created_at;
//    case 3: return payload;
//    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
//    }
//  }
//
//  // Used by DatumReader.  Applications should not call.
//  @SuppressWarnings(value="unchecked")
//  public void put(int field$, java.lang.Object value$) {
//    switch (field$) {
//    case 0: trace_id = (java.lang.CharSequence)value$; break;
//    case 1: data_version = (java.lang.CharSequence)value$; break;
//    case 2: ts_created_at = (java.lang.CharSequence)value$; break;
//    case 3: payload = (java.lang.CharSequence)value$; break;
//    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
//    }
//  }
//
//  /**
//   * Gets the value of the 'trace_id' field.
//   * @return The value of the 'trace_id' field.
//   */
//  public java.lang.CharSequence getTraceId() {
//    return trace_id;
//  }
//
//
//  /**
//   * Sets the value of the 'trace_id' field.
//   * @param value the value to set.
//   */
//  public void setTraceId(java.lang.CharSequence value) {
//    this.trace_id = value;
//  }
//
//  /**
//   * Gets the value of the 'data_version' field.
//   * @return The value of the 'data_version' field.
//   */
//  public java.lang.CharSequence getDataVersion() {
//    return data_version;
//  }
//
//
//  /**
//   * Sets the value of the 'data_version' field.
//   * @param value the value to set.
//   */
//  public void setDataVersion(java.lang.CharSequence value) {
//    this.data_version = value;
//  }
//
//  /**
//   * Gets the value of the 'ts_created_at' field.
//   * @return The value of the 'ts_created_at' field.
//   */
//  public java.lang.CharSequence getTsCreatedAt() {
//    return ts_created_at;
//  }
//
//
//  /**
//   * Sets the value of the 'ts_created_at' field.
//   * @param value the value to set.
//   */
//  public void setTsCreatedAt(java.lang.CharSequence value) {
//    this.ts_created_at = value;
//  }
//
//  /**
//   * Gets the value of the 'payload' field.
//   * @return The value of the 'payload' field.
//   */
//  public java.lang.CharSequence getPayload() {
//    return payload;
//  }
//
//
//  /**
//   * Sets the value of the 'payload' field.
//   * @param value the value to set.
//   */
//  public void setPayload(java.lang.CharSequence value) {
//    this.payload = value;
//  }
//
//  /**
//   * Creates a new pipeline_message RecordBuilder.
//   * @return A new pipeline_message RecordBuilder
//   */
//  public static com.github.rkandoji.kafka.avro.pipeline_message.Builder newBuilder() {
//    return new com.github.rkandoji.kafka.avro.pipeline_message.Builder();
//  }
//
//  /**
//   * Creates a new pipeline_message RecordBuilder by copying an existing Builder.
//   * @param other The existing builder to copy.
//   * @return A new pipeline_message RecordBuilder
//   */
//  public static com.github.rkandoji.kafka.avro.pipeline_message.Builder newBuilder(com.github.rkandoji.kafka.avro.pipeline_message.Builder other) {
//    if (other == null) {
//      return new com.github.rkandoji.kafka.avro.pipeline_message.Builder();
//    } else {
//      return new com.github.rkandoji.kafka.avro.pipeline_message.Builder(other);
//    }
//  }
//
//  /**
//   * Creates a new pipeline_message RecordBuilder by copying an existing pipeline_message instance.
//   * @param other The existing instance to copy.
//   * @return A new pipeline_message RecordBuilder
//   */
//  public static com.github.rkandoji.kafka.avro.pipeline_message.Builder newBuilder(com.github.rkandoji.kafka.avro.pipeline_message other) {
//    if (other == null) {
//      return new com.github.rkandoji.kafka.avro.pipeline_message.Builder();
//    } else {
//      return new com.github.rkandoji.kafka.avro.pipeline_message.Builder(other);
//    }
//  }
//
//  /**
//   * RecordBuilder for pipeline_message instances.
//   */
//  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<pipeline_message>
//    implements org.apache.avro.data.RecordBuilder<pipeline_message> {
//
//    private java.lang.CharSequence trace_id;
//    private java.lang.CharSequence data_version;
//    private java.lang.CharSequence ts_created_at;
//    private java.lang.CharSequence payload;
//
//    /** Creates a new Builder */
//    private Builder() {
//      super(SCHEMA$);
//    }
//
//    /**
//     * Creates a Builder by copying an existing Builder.
//     * @param other The existing Builder to copy.
//     */
//    private Builder(com.github.rkandoji.kafka.avro.pipeline_message.Builder other) {
//      super(other);
//      if (isValidValue(fields()[0], other.trace_id)) {
//        this.trace_id = data().deepCopy(fields()[0].schema(), other.trace_id);
//        fieldSetFlags()[0] = other.fieldSetFlags()[0];
//      }
//      if (isValidValue(fields()[1], other.data_version)) {
//        this.data_version = data().deepCopy(fields()[1].schema(), other.data_version);
//        fieldSetFlags()[1] = other.fieldSetFlags()[1];
//      }
//      if (isValidValue(fields()[2], other.ts_created_at)) {
//        this.ts_created_at = data().deepCopy(fields()[2].schema(), other.ts_created_at);
//        fieldSetFlags()[2] = other.fieldSetFlags()[2];
//      }
//      if (isValidValue(fields()[3], other.payload)) {
//        this.payload = data().deepCopy(fields()[3].schema(), other.payload);
//        fieldSetFlags()[3] = other.fieldSetFlags()[3];
//      }
//    }
//
//    /**
//     * Creates a Builder by copying an existing pipeline_message instance
//     * @param other The existing instance to copy.
//     */
//    private Builder(com.github.rkandoji.kafka.avro.pipeline_message other) {
//      super(SCHEMA$);
//      if (isValidValue(fields()[0], other.trace_id)) {
//        this.trace_id = data().deepCopy(fields()[0].schema(), other.trace_id);
//        fieldSetFlags()[0] = true;
//      }
//      if (isValidValue(fields()[1], other.data_version)) {
//        this.data_version = data().deepCopy(fields()[1].schema(), other.data_version);
//        fieldSetFlags()[1] = true;
//      }
//      if (isValidValue(fields()[2], other.ts_created_at)) {
//        this.ts_created_at = data().deepCopy(fields()[2].schema(), other.ts_created_at);
//        fieldSetFlags()[2] = true;
//      }
//      if (isValidValue(fields()[3], other.payload)) {
//        this.payload = data().deepCopy(fields()[3].schema(), other.payload);
//        fieldSetFlags()[3] = true;
//      }
//    }
//
//    /**
//      * Gets the value of the 'trace_id' field.
//      * @return The value.
//      */
//    public java.lang.CharSequence getTraceId() {
//      return trace_id;
//    }
//
//
//    /**
//      * Sets the value of the 'trace_id' field.
//      * @param value The value of 'trace_id'.
//      * @return This builder.
//      */
//    public com.github.rkandoji.kafka.avro.pipeline_message.Builder setTraceId(java.lang.CharSequence value) {
//      validate(fields()[0], value);
//      this.trace_id = value;
//      fieldSetFlags()[0] = true;
//      return this;
//    }
//
//    /**
//      * Checks whether the 'trace_id' field has been set.
//      * @return True if the 'trace_id' field has been set, false otherwise.
//      */
//    public boolean hasTraceId() {
//      return fieldSetFlags()[0];
//    }
//
//
//    /**
//      * Clears the value of the 'trace_id' field.
//      * @return This builder.
//      */
//    public com.github.rkandoji.kafka.avro.pipeline_message.Builder clearTraceId() {
//      trace_id = null;
//      fieldSetFlags()[0] = false;
//      return this;
//    }
//
//    /**
//      * Gets the value of the 'data_version' field.
//      * @return The value.
//      */
//    public java.lang.CharSequence getDataVersion() {
//      return data_version;
//    }
//
//
//    /**
//      * Sets the value of the 'data_version' field.
//      * @param value The value of 'data_version'.
//      * @return This builder.
//      */
//    public com.github.rkandoji.kafka.avro.pipeline_message.Builder setDataVersion(java.lang.CharSequence value) {
//      validate(fields()[1], value);
//      this.data_version = value;
//      fieldSetFlags()[1] = true;
//      return this;
//    }
//
//    /**
//      * Checks whether the 'data_version' field has been set.
//      * @return True if the 'data_version' field has been set, false otherwise.
//      */
//    public boolean hasDataVersion() {
//      return fieldSetFlags()[1];
//    }
//
//
//    /**
//      * Clears the value of the 'data_version' field.
//      * @return This builder.
//      */
//    public com.github.rkandoji.kafka.avro.pipeline_message.Builder clearDataVersion() {
//      data_version = null;
//      fieldSetFlags()[1] = false;
//      return this;
//    }
//
//    /**
//      * Gets the value of the 'ts_created_at' field.
//      * @return The value.
//      */
//    public java.lang.CharSequence getTsCreatedAt() {
//      return ts_created_at;
//    }
//
//
//    /**
//      * Sets the value of the 'ts_created_at' field.
//      * @param value The value of 'ts_created_at'.
//      * @return This builder.
//      */
//    public com.github.rkandoji.kafka.avro.pipeline_message.Builder setTsCreatedAt(java.lang.CharSequence value) {
//      validate(fields()[2], value);
//      this.ts_created_at = value;
//      fieldSetFlags()[2] = true;
//      return this;
//    }
//
//    /**
//      * Checks whether the 'ts_created_at' field has been set.
//      * @return True if the 'ts_created_at' field has been set, false otherwise.
//      */
//    public boolean hasTsCreatedAt() {
//      return fieldSetFlags()[2];
//    }
//
//
//    /**
//      * Clears the value of the 'ts_created_at' field.
//      * @return This builder.
//      */
//    public com.github.rkandoji.kafka.avro.pipeline_message.Builder clearTsCreatedAt() {
//      ts_created_at = null;
//      fieldSetFlags()[2] = false;
//      return this;
//    }
//
//    /**
//      * Gets the value of the 'payload' field.
//      * @return The value.
//      */
//    public java.lang.CharSequence getPayload() {
//      return payload;
//    }
//
//
//    /**
//      * Sets the value of the 'payload' field.
//      * @param value The value of 'payload'.
//      * @return This builder.
//      */
//    public com.github.rkandoji.kafka.avro.pipeline_message.Builder setPayload(java.lang.CharSequence value) {
//      validate(fields()[3], value);
//      this.payload = value;
//      fieldSetFlags()[3] = true;
//      return this;
//    }
//
//    /**
//      * Checks whether the 'payload' field has been set.
//      * @return True if the 'payload' field has been set, false otherwise.
//      */
//    public boolean hasPayload() {
//      return fieldSetFlags()[3];
//    }
//
//
//    /**
//      * Clears the value of the 'payload' field.
//      * @return This builder.
//      */
//    public com.github.rkandoji.kafka.avro.pipeline_message.Builder clearPayload() {
//      payload = null;
//      fieldSetFlags()[3] = false;
//      return this;
//    }
//
//    @Override
//    @SuppressWarnings("unchecked")
//    public pipeline_message build() {
//      try {
//        pipeline_message record = new pipeline_message();
//        record.trace_id = fieldSetFlags()[0] ? this.trace_id : (java.lang.CharSequence) defaultValue(fields()[0]);
//        record.data_version = fieldSetFlags()[1] ? this.data_version : (java.lang.CharSequence) defaultValue(fields()[1]);
//        record.ts_created_at = fieldSetFlags()[2] ? this.ts_created_at : (java.lang.CharSequence) defaultValue(fields()[2]);
//        record.payload = fieldSetFlags()[3] ? this.payload : (java.lang.CharSequence) defaultValue(fields()[3]);
//        return record;
//      } catch (org.apache.avro.AvroMissingFieldException e) {
//        throw e;
//      } catch (java.lang.Exception e) {
//        throw new org.apache.avro.AvroRuntimeException(e);
//      }
//    }
//  }
//
//  @SuppressWarnings("unchecked")
//  private static final org.apache.avro.io.DatumWriter<pipeline_message>
//    WRITER$ = (org.apache.avro.io.DatumWriter<pipeline_message>)MODEL$.createDatumWriter(SCHEMA$);
//
//  @Override public void writeExternal(java.io.ObjectOutput out)
//    throws java.io.IOException {
//    WRITER$.write(this, SpecificData.getEncoder(out));
//  }
//
//  @SuppressWarnings("unchecked")
//  private static final org.apache.avro.io.DatumReader<pipeline_message>
//    READER$ = (org.apache.avro.io.DatumReader<pipeline_message>)MODEL$.createDatumReader(SCHEMA$);
//
//  @Override public void readExternal(java.io.ObjectInput in)
//    throws java.io.IOException {
//    READER$.read(this, SpecificData.getDecoder(in));
//  }
//
//  @Override protected boolean hasCustomCoders() { return true; }
//
//  @Override public void customEncode(org.apache.avro.io.Encoder out)
//    throws java.io.IOException
//  {
//    out.writeString(this.trace_id);
//
//    out.writeString(this.data_version);
//
//    out.writeString(this.ts_created_at);
//
//    out.writeString(this.payload);
//
//  }
//
//  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
//    throws java.io.IOException
//  {
//    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
//    if (fieldOrder == null) {
//      this.trace_id = in.readString(this.trace_id instanceof Utf8 ? (Utf8)this.trace_id : null);
//
//      this.data_version = in.readString(this.data_version instanceof Utf8 ? (Utf8)this.data_version : null);
//
//      this.ts_created_at = in.readString(this.ts_created_at instanceof Utf8 ? (Utf8)this.ts_created_at : null);
//
//      this.payload = in.readString(this.payload instanceof Utf8 ? (Utf8)this.payload : null);
//
//    } else {
//      for (int i = 0; i < 4; i++) {
//        switch (fieldOrder[i].pos()) {
//        case 0:
//          this.trace_id = in.readString(this.trace_id instanceof Utf8 ? (Utf8)this.trace_id : null);
//          break;
//
//        case 1:
//          this.data_version = in.readString(this.data_version instanceof Utf8 ? (Utf8)this.data_version : null);
//          break;
//
//        case 2:
//          this.ts_created_at = in.readString(this.ts_created_at instanceof Utf8 ? (Utf8)this.ts_created_at : null);
//          break;
//
//        case 3:
//          this.payload = in.readString(this.payload instanceof Utf8 ? (Utf8)this.payload : null);
//          break;
//
//        default:
//          throw new java.io.IOException("Corrupt ResolvingDecoder.");
//        }
//      }
//    }
//  }
//}
//
//
//
//
//
//
//
//
//
//
